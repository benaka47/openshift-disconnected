# Install Nginx web server
- name: install nginx rpm from a local file
  shell: "rpm -ivh {{ role_path }}/files/nginx-*.rpm"
  ignore_errors: True


- name: copy the nginx config file and restart nginx
  copy:
    src: "{{ role_path  }}/files/repo.conf"
    dest: /etc/nginx/conf.d/


# Configure Nginx webserver
- name: configure nginx server root directory
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: '^\sroot.*;$'
    line: "\troot\t{{ nginx_root_directory }};"
  when: (nginx_root_directory is defined)


# Enable file autoindexing
- name: Congigure nginx server
  blockinfile:
    path: /etc/nginx/nginx.conf
    state: present
    marker_begin: "## ANSIBLE MANAGED BLOCK ##"
    marker_end: "## ANSIBLE MANAGED BLOCK END##"
    insertafter: "http {"
    block: |2
      autoindex on;
  notify:
    - restart nginx
    - restart docker
    - restart docker-registy

# Configure yum repository
- name: Create yum repo file
  blockinfile:
    create: yes
    state: present
    path: /etc/yum.repos.d/localrhel.repo
    marker_begin: "## ANSIBLE MANAGED BLOCK ##"
    marker_end: "## ANSIBLE MANAGED BLOCK END##"
    block: |
        [rhel-7-server-rpms]
        name=rhel-7-server-rpms
        baseurl=http://localhost/repos/rhel-7-server-rpms
        enabled=1
        gpgcheck=0
        [rhel-7-server-extras-rpms]
        name=rhel-7-server-extras-rpms
        baseurl=http://localhost/repos/rhel-7-server-extras-rpms
        enabled=1
        gpgcheck=0
        [rhel-7-server-ansible-2.6-rpms]
        name=rhel-7-server-ansible-2.6-rpms
        baseurl=http://localhost/repos/rhel-7-server-ansible-2.6-rpms
        enabled=1
        gpgcheck=0
        [rhel-7-server-ose-3.11-rpms]
        name=rhel-7-server-ose-3.11-rpms
        baseurl=http://localhost/repos/rhel-7-server-ose-3.11-rpms
        enabled=1
        gpgcheck=0

 Install packages offline
- name: install a list of packages
  yum:
    name:
     - "{{ item }}"
    state: latest
  with_items:
    "{{ install_packages }}"

 Set up local docker registry
- name: Process OSE docker images from archive
  include: pull_tag_push_images.yml archive="ose3-images.tar"
  with_items: "{{ ose_docker_images }}"


- name: Process OSE s2i docker images from archive
  include: pull_tag_push_images.yml archive="s2i-ose3-images.tar"
  with_items: "{{ ose_s2i_images }}"


- name: Process OSE docker optional images from archive
  include: pull_tag_push_images.yml archive="ose3-optional-images.tar"
  with_items: "{{ ose_docker_optional_images }}"

- name: Tag etcd image and push to local registry
  shell: docker tag "{{ public_redhat_registry }}"/"{{ etcd_image }}:{{ etcd_image_version }}" {{ disconnected_registry_endpoint }}/"{{ etcd_image }}":"{{ etcd_image_version }}"
